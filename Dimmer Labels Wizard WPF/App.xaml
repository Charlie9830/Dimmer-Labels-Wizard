<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:clr="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:Dimmer_Labels_Wizard_WPF"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" x:Class="Dimmer_Labels_Wizard_WPF.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!-- Application Colour Palette -->
        <SolidColorBrush x:Key="SubHeaderBackground" Color="#FF333337"/>
        <SolidColorBrush x:Key="SubHeaderText" Color="White"/>
        <SolidColorBrush x:Key="ControlGridBackground" Color="#FD1E1E1E"/>
        <SolidColorBrush x:Key="ControlLabelTextColor" Color="White"/>
        <SolidColorBrush x:Key="WindowBackground" Color="#FF2D2D30"/>
        
        <!-- Icons -->
        <Image x:Key="CloseIcon" Source="/Resources/CloseIcon.png" Stretch="Uniform"/>
        
        <!-- Device Independent Pixels to Millimetres Converter -->
        <local:PixelsToMillimetresConverter x:Key="PixelsToMMConverter"/>

        <!-- Boolean to Visibilty Converter, True == Visible, False == Collapsed -->
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
       
        <local:BooleanToVisibilityInvertedConverter x:Key="BoolToVisInverted"/>
        
        <!-- Boolean to Brush Converter. True to Green. False to Red -->
        <local:BooleanToBrushConverter x:Key="BoolToBrush"/>

        <!-- Color to Brush Converter -->
        <local:ColorToBrushConverter x:Key="ColorToBrush"/>
        
        <!-- Help Button -->
        <Image x:Key="HelpIcon24" Source="/Resources/help-circled-24-000000.png" Stretch="Uniform"/>
        <Style x:Key="HelpButton" TargetType="{x:Type Button}">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <TextBlock x:Name="text" HorizontalAlignment="Center" FontFamily="Segoe UI" FontWeight="Normal" FontSize="12" Foreground="{TemplateBinding Foreground}" TextDecorations="Underline">
                                    Help
                            </TextBlock>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Foreground" Value="#FF6A6A6A"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="#FFC3C3C3"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="#FF000000"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>

        <!-- Font Chooser for ComboBoxes. Apply This Style, Then Bind ItemsSource to SystemFonts using
             {Binding Source={StaticResource SystemFonts}} Notation, A direct SystemResource Binding won't work. -->
        <Style x:Key="FontChooserComboBoxStyle" TargetType="ComboBox">
            <Style.Setters>
                <Setter Property="Height" Value="25"/>
                    <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        
        <!-- Window Header Style -->
        <Style x:Key="WindowHeaderStyle" TargetType="Label">
            <Style.Setters>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="Foreground" Value="White"/>
            </Style.Setters>
        </Style>
        
        <!-- Radio Button Style -->
        <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
            <Style.Setters>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style.Setters>
        </Style>
        
        <!-- SystemFonts Collection View Source. Bind ItemsSource to This using
             {Binding Source={StaticResource SystemFonts}} Notation, A direct SystemResource Binding won't work. -->
        <CollectionViewSource  x:Key="SystemFontFamilies" Source="{Binding Source={x:Static Fonts.SystemFontFamilies}}">
            <CollectionViewSource.SortDescriptions>
                 <scm:SortDescription PropertyName="Source"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <!-- Standard Font Sizes -->
        <!-- Bind ItemsSource Properties to this using Explicit Binding. eg {Binding Source={StaticResource StandardFontSizes}} -->
        <CollectionViewSource Source="{Binding Source={x:Static local:Globals.StandardFontSizes}}" x:Key="StandardFontSizes"/>
        
        <!-- Boolean Flip Value Converter -->
        <local:BooleanFlipValueConverter x:Key="BooleanFlipValueConverter"/>
        
        <!-- Zero Hider Value Converter -->
        <local:HideZeroValueConverter x:Key="HideZeroValueConverter"/>

        <!-- Row Splitter Style -->
        <Style x:Key="RowSplitterStyle" TargetType="GridSplitter">
            <Style.Setters>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Background" Value="#FF007ACC"/>
                <Setter Property="Height" Value="3"/>
            </Style.Setters>
        </Style>
        
       
        
        <!-- HeaderedControlStyle Style -->
        <Style x:Key="HeaderedControlStyle" TargetType="HeaderedContentControl" BasedOn="{StaticResource {x:Type HeaderedContentControl}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="HeaderedContentControl">
                        <StackPanel>
                            <Grid>
                                <Rectangle Fill="{StaticResource SubHeaderBackground}"/>
                                <ContentPresenter ContentSource="Header"/>
                            </Grid>
                            <Grid>
                                <ContentPresenter ContentSource="Content"/>
                            </Grid>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Foreground="{StaticResource SubHeaderText}" Text="{Binding}" Margin="5,5,0,5"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ControlGridStyle" TargetType="Grid" BasedOn="{StaticResource {x:Type Grid}}">
            <Setter Property="Background" Value="{StaticResource ControlGridBackground}"/>

        </Style>

        <Style x:Key="ControlLabelStyle" TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="Foreground" Value="{StaticResource ControlLabelTextColor}"/>
        </Style>

        <!-- Item Template for Unique LabelCell Templates -->
        <DataTemplate x:Key="UniqueTemplateItemTemplate">
            <TextBlock Text="{Binding UniqueCellName}"/>
        </DataTemplate>
        
        <local:DimmerDistroUnit x:Key="DemoUnit" ChannelNumber="Channel" InstrumentName="Instrument" MulticoreName="MultiCore"
                                Position="Position" UserField1="User 1" UserField2="User 2" UserField3="User 3" UserField4="User 4"
                                Custom="Custom"/>

    </Application.Resources>
</Application>
